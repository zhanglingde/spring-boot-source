plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group 'org.springframework.boot'
version '2.3.0.RELEASE'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    // 添加 SpringBoot 依赖
    compile(project(":spring-boot-project:spring-boot"))
    compile(project(":spring-boot-project:spring-boot-actuator"))
    compile(project(":spring-boot-project:spring-boot-actuator-autoconfigure"))
    compile(project(":spring-boot-project:spring-boot-autoconfigure"))
    compile(project(":spring-boot-project:spring-boot-cli"))
//    compile(project(":spring-boot-project:spring-boot-dependencies"))
    compile(project(":spring-boot-project:spring-boot-devtools"))
    compile(project(":spring-boot-project:spring-boot-docs"))
//    compile(project(":spring-boot-project:spring-boot-parent"))
    compile(project(":spring-boot-project:spring-boot-properties-migrator"))

    // starters
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-activemq"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-actuator"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-amqp"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-aop"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-artemis"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-batch"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-cache"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-solr"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-integration"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-jersey"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-jetty"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-jooq"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-json"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-jta-atomikos"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-jta-bitronix"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-logging"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-mail"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-mustache"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server"))
//    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-parent"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-quartz"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-security"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-test"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-undertow"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-validation"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-web"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-web-services"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-webflux"))
    compile(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-websocket"))

//    file("${rootDir}/spring-boot-project/spring-boot-starters").eachDirMatch(~/spring-boot-starter.*/) {
//        compile(project("spring-boot-project:spring-boot-starters:${it.name}"))
//    }

    compile(project(":spring-boot-project:spring-boot-test"))
    compile(project(":spring-boot-project:spring-boot-test-autoconfigure"))
//    compile(project(":spring-boot-project:spring-boot-tools"))
}

test {
    useJUnitPlatform()
}